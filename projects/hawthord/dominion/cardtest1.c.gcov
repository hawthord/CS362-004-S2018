        -:    0:Source:cardtest1.c
        -:    0:Graph:cardtest1.gcno
        -:    0:Data:cardtest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "assert.h"
        -:    2:#include "dominion.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <stdlib.h>
        -:    6:
        -:    7://test card Adventurer
        1:    8:int main (int argc, char** argv) {
        -:    9:	struct gameState G;
        1:   10:	int result, rando = 0;
        -:   11:	int temphand[MAX_HAND];
        1:   12:	int k[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, sea_hag, tribute, smithy};
        1:   13:	rando = rand() % 10;
        1:   14:	result = initializeGame(2, k, rando, &G);
        1:   15:	assert(result == 0);
        1:   16:	printf("Card Test 1:\n");
        -:   17:	
        -:   18:	//test invalid input, drawntreasure not initialized at or reset to 0.
        1:   19:	result = adventurerCard(&G, 1, 1, temphand);
        1:   20:	assert(result == 0);
        -:   21:	
        -:   22:	//test invalid input, drawntreasure not initialized at or reset to 0.
        1:   23:	result = adventurerCard(&G, 1, -1, temphand);
        1:   24:	assert(result == 0);
        -:   25:	
        -:   26:	//test valid input
        1:   27:	result = adventurerCard(&G, 1, 0, temphand);
        1:   28:	assert(result == 0);
        -:   29:	
        1:   30:	printf("TEST SUCCESSFULLY COMPLETED.\n");
        1:   31:	return 0;
        -:   32:}
